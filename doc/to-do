Need one or more watchlists per user.  Use the "currently selected
watchlist" to auto-select the stocks for analysis; continue to present the
symbol select list, with the auto-selected stocks marked, to allow the user
to add more or completely change the selection.

Need a table/model of a user's recently accessed items (starting with
stock/tradable symbols).  This will be used, e.g., to display links, and
possibly summary data, for the stocks/tradables the user has most recently
visited.

When a symbol in the symbol list turns out to be invalid (i.e., server
responds with: "104  Server error: Error occurred retrieving non-intraday
period types for <symbol>"), remove it from the symbol list (in
MasSession).


Charting:
  - abbreviate dates.

POSSIBLE FUTURE ENHANCEMENTS:

Consider adding period-type as an optional specifier for
event/analysis-data requests (e.g., event_id_list of '1\t5\t7\t' can be
changed to: '1:daily\t5:weekly\t7:quarterly').  (With this change, the
MAS analyzer period-type attribute would be considered the default
period type.)  There may need to be a separation between interday and
intraday analyses - e.g., an analyzer with default period-type of daily
may not be useable with an intraday period type.  Note that
COMPOUND_EVENT_GENERATORs don.t have a period type, but its "leaves"
will - If the leaves have different default period types, overriding
these period types to the same value may be useless and should perhaps
be disallowed in this situation.

COMPLETED:

Put symbols, period-types, and perhaps other lists (such as indicators and
analyzers) in MasSession (mas_sessions) to allow short-lived access (i.e.,
no longer than [and possibly much shorter than] the lifetime of a MAS session)
across http requests so that these data don't need to be retrieved from the
MAS server on loading of every MAS-related page (in order to avoid
overloading the MAS server and probably also to make the code a bit
simpler).

Charting:
  - When the user changes to a new period-type, don't use the dates
    submitted by the form - use the dates for the period-types in the
    database.  The user can then, if he wants to, change the dates while
    keeping the same period-type.

Change to implement and use the "time-delimited" version of tradable- and 
indicator-data requests so that the time-period/range for a particular
request can be changed on the fly without needing to change the MAS-server
session configuration (which currently, I believe, can only be done by
logging out and re-logging back into the MAS server).

Move logic in app/helpers/sessions_helper.rb that doesn't belong in a view
to a more appropriate place, such as
app/controllers/application_controller.rb.

Need to change the period-type-spec start/end date to roll forward relative
the to current date - so that, e.g., a start date picked to analyze data
starting 2 years ago will not become 2-years-plus-one-day the next day,
etc.  The way to do this is probably to use the created-at datetime -
e.g., start-date is today - (created-at - start_date)-days-ago.

We probably need at least two different sets (per user) of
period-type-specs: one (long-range) to use for charts; and one (short-range)
to use for analysis/signal-generation.  This can probably be modeled by
adding a column (named, perhaps, 'purpose' or 'designation') to the
period_type_specs table (and associated PeriodTypeSpec attribute).
