#!/usr/bin/env bash
# display schema for the specified tables.
# vim: expandtab

istest=false
db=tat_development
user=tat
tbcmd='\dt'
desc='\d'
all=false
schema=$0
line='======================================================================'
line="$line$line"

ruby_to_table() {
  table=$1
  if expr $1 : '.*\.rb$' >/dev/null; then
    table=$(basename $table|sed 's@\.rb@s@')
  fi
  echo $table
}

filter() {
    cat -|
    awk '
        /ar_internal_metadata/ {next}
        /schema_migrations/ {next}
        /^---*/ {ready=1}
        (ready) {print $3}
        '|egrep -v '^$'
}

case $1 in
    -t*) istest=true;shift
        ;;
    -a*) all=true;shift
esac

if [ "$DB" ]; then
    db=$DB
fi
if eval $istest; then
    db=tat_test
fi
if [ $# -eq 0 ]; then
    if eval $all; then
        set $(echo "$tbcmd"|
            PGPASSWORD=$DB_PASSWORD psql -U $user -d $db|filter)
        eval $schema $1
        shift
        for t; do
            echo "$line"
            eval $schema $t
        done
    else
        echo "$tbcmd"|
            PGPASSWORD=$DB_PASSWORD psql -U $user -d $db|
            filter|awk '{print "[" NR "] " $0}'
    fi
else
    export PGPASSWORD=$DB_PASSWORD
    args=$*
    for t in $args; do
        if expr $t : '^[0-9][0-9]*$' >/dev/null; then
            table=$(echo "$tbcmd"|psql -U $user -d $db|filter|sed -n "${t}p")
        else
            table=$(ruby_to_table $t)
        fi
        echo "$desc $table"|psql -U $user -d $db|
            sed 's@^ *\(Table\) *"public\.\([^"]*\)"@\1 \2:\n@'
    done
fi
